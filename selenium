#We downloaded geckodriver and saved it to usr/bin
from selenium import webdriver

driver= webdriver.Firefox()
driver.get("https:teamfluencer.co")
#print(driver.title) prints the title of the page
#driver.close() closes the tab
#driver.quit() closes the browser
------------------------Locating html elements---------
We can access an input tag using id(unique), name(not unique), class(not unique worst case)
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
import time
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC 

driver= webdriver.Firefox()
driver.get("https://techwithtim.net")
search= driver.find_element_by_name("s")
search.send_keys("test")
search.send_keys(Keys.RETURN)

try:
    main= WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID, "main")))
    articles= main.find_elements_by_tag_name("article")
    for article in articles:
      header= article.find_element_by_class_name("entry-title")
finally:
    driver.quit()

driver.quit()

---------------------Page navigation and clicking elements-----------------------------------
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
import time

driver= webdriver.Firefox()
driver.get("https://techwithtim.net")
link= driver.find_element_by_link_text("Python programming)
link.click()

try:
  element= WebDriverWait(driver, 10).untill(EC.presence_of_element_located((By.LINK_TEXT, "Beginner python tutorials")))
  element.clear() #clears the search bar before clicking it
  element.click()
  
  element= WebDriverWait(driver, 10).untill(EC.presence_of_element_located((By.ID, "sow-button-19310003")))
  element.click()
  
  driver.back() #this goes to the previous page
  driver.back()
  driver.forward()
  driver.forward() #this forwars us
  
except:
  driver.quit()

-----------------Actions and action chains-----------
from selenium import webdriver
from selenium.webdriver.common.action_chains import ActionChains

driver= webdriver.Firefox()
driver.get("https://orteil.dashnet.org/cookieclicker")

driver.implicitly_wait(5) //waits 5 seconds

cookie= driver.find_element_by_id("big cookie")
cookie_count= driver.find_element_by_id("cookies")
items= [driver.find_element_by_id("productPrice" + str(i)) for i in range(1, -1, -1)]

actions= ActionChains(Driver)
actions.click(cookie)

  for i in range(5000):
    actions.perform()
    count= int(cookie_count.text.split("")[0])
    for item in items:
      value= int(item.text)
      if value <= count:
        upgrade_actions= ActionChains(driver)
        upgrade_actions.move_to_element(item)
        upgrade_actions.click()
        upgrade_actions.perform
