import logging 

#logging levels allows us to specify exactly what we want to log by seperating into categories, there are 5 standart logging levels: (debug, info, warning, error, critical)
#default logging level is set to warning and above so normally logging doesnt print out debug or info 

logging.basicConfig(filename='test.log', level= logging.DEBUG)

def add(num1, num2):
	return num1+num2

add_result= add(num1, num2)
 logging.debug("Add: {} + {} = {}".format(num1, num2, add_result))
 
 #default logging format =
 DEBUG:root:Add 10 + 20 = 30
----------------------------Logging format-------------
To change logging format we have to add some special values to our basic config (i.e. LogRecord Attributes)

logging.basicConfig(filename= 'test.log', level= logging.DEBUG, format= '%(asctime)s:%(name)s:%(levelname)s:%(message)s')

--------------------Advanced logging---------------------

logger= logging.getLogger(__name__)
logging.basicConfig(filename= 'employee.log', level= logging.DEBUG, format= '%(asctime)s:%(name)s:%(levelname)s:%(message)s')

def add(num1, num2)
	return num1+num2

logger.debug("Add: {} + {} = {}".format(num1, num2, add(num1, num2))  #with our new logger created we change our classname to logger from logging









